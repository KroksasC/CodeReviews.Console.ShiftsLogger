// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240802225249_SeedInitialDatabase")]
    partial class SeedInitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Data.Entities.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new TimeOnly(13, 0, 0),
                            Name = "Morning Shift",
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new TimeOnly(17, 0, 0),
                            Name = "Afternoon Shift",
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new TimeOnly(21, 0, 0),
                            Name = "Evening Shift",
                            StartTime = new TimeOnly(17, 0, 0)
                        });
                });

            modelBuilder.Entity("Api.Data.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            Position = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jane",
                            LastName = "Smith",
                            Position = "Developer"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Emily",
                            LastName = "Johnson",
                            Position = "Designer"
                        });
                });

            modelBuilder.Entity("Api.Data.Entities.WorkerShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("ShiftDate")
                        .HasColumnType("date");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerShifts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ShiftDate = new DateOnly(2024, 8, 1),
                            ShiftId = 1,
                            WorkerId = 1
                        },
                        new
                        {
                            Id = 2,
                            ShiftDate = new DateOnly(2024, 8, 2),
                            ShiftId = 2,
                            WorkerId = 1
                        },
                        new
                        {
                            Id = 3,
                            ShiftDate = new DateOnly(2024, 8, 1),
                            ShiftId = 1,
                            WorkerId = 2
                        },
                        new
                        {
                            Id = 4,
                            ShiftDate = new DateOnly(2024, 8, 2),
                            ShiftId = 3,
                            WorkerId = 2
                        },
                        new
                        {
                            Id = 5,
                            ShiftDate = new DateOnly(2024, 8, 1),
                            ShiftId = 2,
                            WorkerId = 3
                        },
                        new
                        {
                            Id = 6,
                            ShiftDate = new DateOnly(2024, 8, 2),
                            ShiftId = 3,
                            WorkerId = 3
                        });
                });

            modelBuilder.Entity("Api.Data.Entities.WorkerShift", b =>
                {
                    b.HasOne("Api.Data.Entities.Shift", "Shift")
                        .WithMany("WorkerShifts")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Data.Entities.Worker", "Worker")
                        .WithMany("WorkerShifts")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shift");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Api.Data.Entities.Shift", b =>
                {
                    b.Navigation("WorkerShifts");
                });

            modelBuilder.Entity("Api.Data.Entities.Worker", b =>
                {
                    b.Navigation("WorkerShifts");
                });
#pragma warning restore 612, 618
        }
    }
}
